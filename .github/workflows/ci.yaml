name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: yarn test

      - name: Run Lint
        run: yarn lint

  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install

      - name: Get Git Short Hash
        id: vars
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: alfonsobalmori/myapp:${{ env.GIT_SHA }}

      - name: Update deployment.yaml with new Docker image tag
        run: |
          sed -i 's/tag: ".*"/tag: "${{ env.GIT_SHA }}"/' manifest/deployment.yaml

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ROLE_NAME }}
          aws-region: us-east-1
          role-duration-seconds: 3600

      - name: Setup kubectl
        uses: kodermax/kubectl-aws-eks@main

      - name: Create kubeconfig file
        run: |
          aws eks update-kubeconfig --name ${{ vars.CLUSTER_NAME }} --region us-east-1

      - name: Apply Kubernetes manifests
        env:
          KUBECONFIG: /home/runner/.kube/config
        run: |
          kubectl apply -f manifest/deployment.yaml --validate=false
          kubectl apply -f manifest/service.yaml --validate=false

      - name: Bypass Husky
        run: git config core.hooksPath /dev/null

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add manifest/deployment.yaml
          git commit -m "Update deployment.yaml with new image tag ${{ github.sha }} [skip ci]"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
